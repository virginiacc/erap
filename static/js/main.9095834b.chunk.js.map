{"version":3,"sources":["SelectComponent.js","ResultsRow.js","Results.js","App.js","reportWebVitals.js","index.js"],"names":["SelectComponent","props","value","selectedValue","onChange","event","handler","target","disabled","defaultText","items","map","item","name","ResultsRow","className","href","rel","Results","vals","data","selectedState","filter","sort","a","b","locality","reverse","length","index","granteeStates","granteeTribes","granteeTerritories","App","useState","setSelectedState","htmlFor","states","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yt+MAqBeA,EArBS,SAAEC,GAIxB,OACE,yBAAQC,MAAQD,EAAME,cACdC,SALV,SAAuBC,GACrBJ,EAAMK,QAASD,EAAME,OAAOL,QAG5B,UAEE,wBAAQM,UAAQ,EACRN,MAAM,GADd,SAEID,EAAMQ,cAERR,EAAMS,MAAMC,KAAK,SAAAC,GAAI,OACrB,wBACQV,MAAQU,EAAKV,MADrB,SAEIU,EAAKC,MAFKD,EAAKV,cCIZY,EAhBI,SAAEb,GACnB,OACA,+BACC,6BAAMA,EAAMW,KAAK,oBACjB,6BAAMX,EAAMW,KAAN,WACN,oBAAIG,UAAU,UAAd,SACC,mBAAGC,KAAOf,EAAMW,KAAN,IACRK,IAAI,aACJV,OAAO,SAFT,SAGGN,EAAMW,KAAN,YC0BQM,EAjCC,SAAEjB,GACjB,IAAIkB,EAAOlB,EAAMmB,KASjB,OARKnB,EAAMoB,gBACVF,EAAOA,EAAKG,QACX,SAAAV,GAAI,OAAIA,EAAK,qBAAuBX,EAAMoB,kBAG5CF,EAAKI,MACJ,SAACC,EAAGC,GAAJ,OAAYD,EAAEE,SAAWD,EAAEC,SAAa,GAAK,KAC5CC,UACGR,EAAKS,OAER,qBAAKb,UAAU,UAAf,SACI,kCACC,gCACC,+BACC,sCACA,sCACA,oBAAIA,UAAU,UAAd,sBAGF,gCACGI,EAAKR,KAAK,SAAEC,EAAMiB,GAAR,OACV,cAAC,EAAD,CAAYjB,KAAOA,GAAaiB,aAOjC,qBAAKd,UAAU,UAAf,yBCrBJK,EAAI,sBAAOU,GAAP,YAAyBC,GAAzB,YAA2CC,IAwBtCC,MAlBf,WACE,MAA4CC,mBAAU,IAAtD,mBAAQb,EAAR,KAAuBc,EAAvB,KACA,EAA8CD,mBAAU,IAAxD,mBACA,GADA,UAC0CA,mBAAU,KAApD,mBAEA,OAFA,UAGE,sBAAKnB,UAAU,MAAf,UACE,uBAAOqB,QAAQ,eAAf,0CACA,cAAC,EAAD,CAAiB1B,MAAQ2B,EACRlC,cAAgBkB,EAChBZ,YAAY,8BACZ6B,GAAG,eACHhC,QAAU6B,IAC3B,cAAC,EAAD,CAASd,cAAgBA,EAAgBD,KAAOA,QClBvCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9095834b.chunk.js","sourcesContent":["const SelectComponent = ( props ) => {\n  function handleChange( event ) {\n    props.handler( event.target.value );\n  }\n  return (\n    <select value={ props.selectedValue } \n            onChange={ handleChange }>\n      <option disabled\n              value=\"\">\n        { props.defaultText }\n      </option>\n      { props.items.map( item => (\n        <option key={ item.value } \n                value={ item.value }>\n          { item.name }\n        </option>\n      ) ) }\n    </select>\n  );\n};\n\nexport default SelectComponent;","const ResultsRow = ( props ) => {\n  return (\n\t\t<tr>\n\t\t\t<td>{ props.item['recipient-name'] }</td>\n\t\t\t<td>{ props.item['locality'] }</td>\n\t\t\t<td className=\"url-col\">\n\t\t\t\t<a href={ props.item['URL'] }\n\t\t\t\t\t rel=\"noreferrer\"\n\t\t\t\t\t target=\"_blank\">\n\t\t\t\t\t{ props.item['URL'] }\n\t\t\t\t</a>\n\t\t\t</td>\n\t\t</tr>\t\t\n \t);\n};\n\nexport default ResultsRow;","import ResultsRow from \"./ResultsRow.js\";\n\nconst Results = ( props ) => {\n\tlet vals = props.data;\n\tif ( props.selectedState ) {\n\t\tvals = vals.filter(\n\t\t\titem => item[\"state-territory\"] === props.selectedState \n\t\t)\n\t}\n\tvals.sort(\n\t\t(a, b) => ( a.locality > b.locality ) ? 1 : -1\n\t).reverse();\n\tif ( vals.length ) {\n\t\treturn (\n\t\t\t<div className=\"results\">\n\t     \t<table>\n\t     \t\t<thead>\n\t     \t\t\t<tr>\n\t     \t\t\t\t<th>Name</th>\n\t     \t\t\t\t<th>Type</th>\n\t     \t\t\t\t<th className=\"url-col\">URL</th>\n\t     \t\t\t</tr>\n\t     \t\t</thead>\n\t     \t\t<tbody>\n\t     \t\t\t{ vals.map( ( item, index ) => (\n\t\t\t        <ResultsRow item={ item } key={ index }/>\n\t\t\t      ) ) }\n\t     \t\t</tbody>\n\t     \t</table>\n\t    </div>\n\t \t);\n\t}\n  return (<div className=\"results\">No results</div>)\n};\n\nexport default Results;","import './App.css';\nimport { useState } from 'react';\nimport { useMemo } from 'react';\nimport states from \"./states.json\";\nimport granteeStates from \"./grantees-states.json\";\nimport granteeTribes from \"./grantees-tribes.json\";\nimport granteeTerritories from \"./grantees-territories.json\";\n\nimport SelectComponent from \"./SelectComponent.js\";\nimport Results from \"./Results.js\";\n\nconst data = [...granteeStates, ...granteeTribes, ...granteeTerritories];\n\nfunction filterByState( state, data ) {\n\n}\n\nfunction App() {\n  const [ selectedState, setSelectedState ] = useState( '' );\n  const [ selectedTypeFilter, setTypeFilter ] = useState( '' );\n  const [ selectedType, setSelectedType ] = useState( '' );\n\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"state-select\">Filter by state or territory</label>\n      <SelectComponent items={ states } \n                       selectedValue={ selectedState }\n                       defaultText=\"select a state or territory\"\n                       id=\"state-select\"\n                       handler={ setSelectedState }/>\n      <Results selectedState={ selectedState } data={ data }/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}